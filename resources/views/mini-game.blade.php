@extends('layouts.app')

@section('title', 'Mini Game - MovieHub')

@section('content')
  <div class="max-w-4xl mx-auto px-4 py-8">
    <!-- Game Header -->
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold text-white mb-4 flex items-center justify-center gap-3">
        <span>üé∞</span>
        <span>Quay s·ªë tr√∫ng v√©</span>
      </h1>
      <p class="text-[#a6a6b0] text-lg">Quay v√≤ng may m·∫Øn ƒë·ªÉ c√≥ c∆° h·ªôi tr√∫ng v√© xem phim mi·ªÖn ph√≠!</p>
    </div>

    <div class="grid lg:grid-cols-3 gap-8">
      <!-- Game Area -->
      <div class="lg:col-span-2">
        <div class="bg-[#1b1d24] border border-[#262833] rounded-xl p-8">
          <!-- Spin Wheel -->
          <div class="flex flex-col items-center">
            <div class="relative mb-8">
              <div id="spin-wheel" class="spin-wheel">
                <!-- Wheel segments will be generated by JavaScript -->
              </div>
              <div class="spin-pointer"></div>
            </div>
            
            <!-- Spin Button -->
            <button id="spin-button" class="glow-button bg-gradient-to-r from-[#F53003] to-orange-400 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-[#F53003]/25">
              üéØ Quay ngay
            </button>
            
            <!-- Game Stats -->
            <div class="mt-8 grid grid-cols-3 gap-4 w-full max-w-md">
              <div class="bg-[#222533] rounded-lg p-4 text-center">
                <div class="text-2xl font-bold text-[#F53003]" id="spins-left">3</div>
                <div class="text-sm text-[#a6a6b0]">L·∫ßn quay c√≤n l·∫°i</div>
              </div>
              <div class="bg-[#222533] rounded-lg p-4 text-center">
                <div class="text-2xl font-bold text-green-400" id="total-wins">0</div>
                <div class="text-sm text-[#a6a6b0]">L·∫ßn th·∫Øng</div>
              </div>
              <div class="bg-[#222533] rounded-lg p-4 text-center">
                <div class="text-2xl font-bold text-blue-400" id="total-spins">0</div>
                <div class="text-sm text-[#a6a6b0]">T·ªïng l∆∞·ª£t quay</div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Game Rules -->
        <div class="bg-[#1b1d24] border border-[#262833] rounded-xl p-6 mt-6">
          <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
            <span>üìã</span>
            <span>Lu·∫≠t ch∆°i</span>
          </h3>
          <div class="space-y-3 text-[#a6a6b0]">
            <div class="flex items-start gap-3">
              <span class="text-[#F53003]">‚Ä¢</span>
              <span>M·ªói ng√†y b·∫°n c√≥ 3 l·∫ßn quay mi·ªÖn ph√≠</span>
            </div>
            <div class="flex items-start gap-3">
              <span class="text-[#F53003]">‚Ä¢</span>
              <span>Tr√∫ng v√© mi·ªÖn ph√≠: 5% c∆° h·ªôi</span>
            </div>
            <div class="flex items-start gap-3">
              <span class="text-[#F53003]">‚Ä¢</span>
              <span>Gi·∫£m 50%: 15% c∆° h·ªôi</span>
            </div>
            <div class="flex items-start gap-3">
              <span class="text-[#F53003]">‚Ä¢</span>
              <span>Gi·∫£m 20%: 30% c∆° h·ªôi</span>
            </div>
            <div class="flex items-start gap-3">
              <span class="text-[#F53003]">‚Ä¢</span>
              <span>Combo mi·ªÖn ph√≠: 20% c∆° h·ªôi</span>
            </div>
            <div class="flex items-start gap-3">
              <span class="text-[#F53003]">‚Ä¢</span>
              <span>Ch√∫c may m·∫Øn l·∫ßn sau: 30% c∆° h·ªôi</span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Sidebar -->
      <div class="space-y-6">
        <!-- Prizes -->
        <div class="bg-[#1b1d24] border border-[#262833] rounded-xl p-6">
          <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
            <span>üèÜ</span>
            <span>Gi·∫£i th∆∞·ªüng</span>
          </h3>
          <div class="space-y-4">
            <div class="prize-item bg-gradient-to-r from-yellow-500 to-orange-500 rounded-lg p-4">
              <div class="flex items-center gap-3">
                <div class="text-2xl">üé´</div>
                <div>
                  <h4 class="font-semibold text-white">V√© mi·ªÖn ph√≠</h4>
                  <p class="text-sm text-white/80">1 v√© xem phim b·∫•t k·ª≥</p>
                </div>
              </div>
            </div>
            
            <div class="prize-item bg-gradient-to-r from-green-500 to-emerald-500 rounded-lg p-4">
              <div class="flex items-center gap-3">
                <div class="text-2xl">üí∞</div>
                <div>
                  <h4 class="font-semibold text-white">Gi·∫£m 50%</h4>
                  <p class="text-sm text-white/80">√Åp d·ª•ng cho ƒë∆°n h√†ng ti·∫øp theo</p>
                </div>
              </div>
            </div>
            
            <div class="prize-item bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg p-4">
              <div class="flex items-center gap-3">
                <div class="text-2xl">üéÅ</div>
                <div>
                  <h4 class="font-semibold text-white">Gi·∫£m 20%</h4>
                  <p class="text-sm text-white/80">√Åp d·ª•ng cho ƒë∆°n h√†ng ti·∫øp theo</p>
                </div>
              </div>
            </div>
            
            <div class="prize-item bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg p-4">
              <div class="flex items-center gap-3">
                <div class="text-2xl">üçø</div>
                <div>
                  <h4 class="font-semibold text-white">Combo mi·ªÖn ph√≠</h4>
                  <p class="text-sm text-white/80">1 combo b·∫Øp n∆∞·ªõc</p>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Recent Winners -->
        <div class="bg-[#1b1d24] border border-[#262833] rounded-xl p-6">
          <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
            <span>üëë</span>
            <span>Ng∆∞·ªùi th·∫Øng g·∫ßn ƒë√¢y</span>
          </h3>
          <div class="space-y-3">
            <div class="flex items-center gap-3 p-3 bg-[#222533] rounded-lg">
              <div class="w-8 h-8 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                N
              </div>
              <div class="flex-1">
                <p class="font-semibold text-sm">Nguy·ªÖn VƒÉn A</p>
                <p class="text-xs text-[#a6a6b0]">Tr√∫ng v√© mi·ªÖn ph√≠</p>
              </div>
              <span class="text-xs text-[#a6a6b0]">2 ph√∫t tr∆∞·ªõc</span>
            </div>
            
            <div class="flex items-center gap-3 p-3 bg-[#222533] rounded-lg">
              <div class="w-8 h-8 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                T
              </div>
              <div class="flex-1">
                <p class="font-semibold text-sm">Tr·∫ßn Th·ªã B</p>
                <p class="text-xs text-[#a6a6b0]">Gi·∫£m 50%</p>
              </div>
              <span class="text-xs text-[#a6a6b0]">5 ph√∫t tr∆∞·ªõc</span>
            </div>
            
            <div class="flex items-center gap-3 p-3 bg-[#222533] rounded-lg">
              <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                L
              </div>
              <div class="flex-1">
                <p class="font-semibold text-sm">L√™ VƒÉn C</p>
                <p class="text-xs text-[#a6a6b0]">Combo mi·ªÖn ph√≠</p>
              </div>
              <span class="text-xs text-[#a6a6b0]">10 ph√∫t tr∆∞·ªõc</span>
            </div>
          </div>
        </div>
        
        <!-- Daily Challenge -->
        <div class="bg-[#1b1d24] border border-[#262833] rounded-xl p-6">
          <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
            <span>üéØ</span>
            <span>Th·ª≠ th√°ch h√†ng ng√†y</span>
          </h3>
          <div class="space-y-4">
            <div class="bg-[#222533] rounded-lg p-4">
              <div class="flex items-center justify-between mb-2">
                <span class="font-semibold">Quay 3 l·∫ßn</span>
                <span class="text-[#F53003] font-bold">+1 l·∫ßn quay</span>
              </div>
              <div class="w-full bg-[#1b1d24] rounded-full h-2">
                <div class="bg-gradient-to-r from-[#F53003] to-orange-400 h-2 rounded-full" style="width: 100%"></div>
              </div>
              <p class="text-xs text-[#a6a6b0] mt-2">Ho√†n th√†nh! Nh·∫≠n th∆∞·ªüng ngay</p>
            </div>
            
            <div class="bg-[#222533] rounded-lg p-4">
              <div class="flex items-center justify-between mb-2">
                <span class="font-semibold">Chia s·∫ª game</span>
                <span class="text-[#F53003] font-bold">+1 l·∫ßn quay</span>
              </div>
              <div class="w-full bg-[#1b1d24] rounded-full h-2">
                <div class="bg-gradient-to-r from-[#F53003] to-orange-400 h-2 rounded-full" style="width: 0%"></div>
              </div>
              <button class="w-full mt-2 px-4 py-2 bg-[#F53003] text-white rounded-lg hover:bg-[#ff4d4d] transition-colors text-sm">
                Chia s·∫ª ngay
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Result Modal -->
  <div id="result-modal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden">
    <div class="bg-[#1b1d24] border border-[#262833] rounded-xl p-8 w-full max-w-md mx-4 text-center">
      <div id="result-icon" class="w-20 h-20 mx-auto mb-4 rounded-full flex items-center justify-center text-4xl">
        <!-- Result icon will be set by JavaScript -->
      </div>
      <h3 id="result-title" class="text-2xl font-bold text-white mb-2">Ch√∫c m·ª´ng!</h3>
      <p id="result-message" class="text-[#a6a6b0] mb-6">B·∫°n ƒë√£ tr√∫ng gi·∫£i th∆∞·ªüng!</p>
      <div class="flex gap-3">
        <button id="claim-prize" class="flex-1 px-6 py-3 bg-gradient-to-r from-[#F53003] to-orange-400 text-white rounded-lg font-semibold hover:scale-105 transition-all duration-300">
          Nh·∫≠n th∆∞·ªüng
        </button>
        <button onclick="closeResultModal()" class="flex-1 px-6 py-3 bg-[#2a2d3a] text-white rounded-lg font-semibold hover:bg-[#3a3d4a] transition-colors">
          ƒê√≥ng
        </button>
      </div>
    </div>
  </div>

  <script>
    class SpinWheelGame {
      constructor() {
        this.spinsLeft = 3;
        this.totalWins = 0;
        this.totalSpins = 0;
        this.isSpinning = false;
        
        this.prizes = [
          { id: 'free-ticket', name: 'V√© mi·ªÖn ph√≠', icon: 'üé´', color: '#f59e0b', probability: 5 },
          { id: 'discount-50', name: 'Gi·∫£m 50%', icon: 'üí∞', color: '#10b981', probability: 15 },
          { id: 'discount-20', name: 'Gi·∫£m 20%', icon: 'üéÅ', color: '#3b82f6', probability: 30 },
          { id: 'free-combo', name: 'Combo mi·ªÖn ph√≠', icon: 'üçø', color: '#8b5cf6', probability: 20 },
          { id: 'try-again', name: 'Ch√∫c may m·∫Øn l·∫ßn sau', icon: 'üòî', color: '#6b7280', probability: 30 }
        ];
        
        this.init();
      }
      
      init() {
        this.createWheel();
        this.bindEvents();
        this.updateStats();
      }
      
      createWheel() {
        const wheel = document.getElementById('spin-wheel');
        const totalProbability = this.prizes.reduce((sum, prize) => sum + prize.probability, 0);
        let currentAngle = 0;
        
        this.prizes.forEach(prize => {
          const angle = (prize.probability / totalProbability) * 360;
          const segment = document.createElement('div');
          segment.className = 'wheel-segment';
          segment.style.cssText = `
            position: absolute;
            width: 50%;
            height: 50%;
            transform-origin: 100% 100%;
            transform: rotate(${currentAngle}deg) skewY(${90 - angle}deg);
            background: ${prize.color};
            border: 2px solid white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
          `;
          segment.textContent = prize.icon;
          segment.dataset.prize = prize.id;
          wheel.appendChild(segment);
          currentAngle += angle;
        });
      }
      
      bindEvents() {
        document.getElementById('spin-button').addEventListener('click', () => {
          if (!this.isSpinning && this.spinsLeft > 0) {
            this.spin();
          }
        });
        
        document.getElementById('claim-prize').addEventListener('click', () => {
          this.claimPrize();
        });
      }
      
      spin() {
        if (this.isSpinning || this.spinsLeft <= 0) return;
        
        this.isSpinning = true;
        this.spinsLeft--;
        this.totalSpins++;
        
        const spinButton = document.getElementById('spin-button');
        spinButton.disabled = true;
        spinButton.textContent = 'ƒêang quay...';
        
        // Calculate random result
        const random = Math.random() * 100;
        let cumulativeProbability = 0;
        let selectedPrize = null;
        
        for (const prize of this.prizes) {
          cumulativeProbability += prize.probability;
          if (random <= cumulativeProbability) {
            selectedPrize = prize;
            break;
          }
        }
        
        // Calculate spin angle
        const baseAngle = Math.random() * 360;
        const fullRotations = 5 + Math.random() * 5; // 5-10 full rotations
        const finalAngle = baseAngle + (fullRotations * 360);
        
        // Animate wheel
        const wheel = document.getElementById('spin-wheel');
        wheel.style.transform = `rotate(${finalAngle}deg)`;
        
        // Show result after animation
        setTimeout(() => {
          this.showResult(selectedPrize);
          this.isSpinning = false;
          spinButton.disabled = false;
          spinButton.textContent = this.spinsLeft > 0 ? 'üéØ Quay ngay' : 'H·∫øt l∆∞·ª£t quay';
          this.updateStats();
        }, 4000);
      }
      
      showResult(prize) {
        const modal = document.getElementById('result-modal');
        const icon = document.getElementById('result-icon');
        const title = document.getElementById('result-title');
        const message = document.getElementById('result-message');
        
        icon.textContent = prize.icon;
        icon.style.background = `linear-gradient(135deg, ${prize.color}, ${this.lightenColor(prize.color, 20)})`;
        
        if (prize.id === 'try-again') {
          title.textContent = 'Ch√∫c may m·∫Øn l·∫ßn sau!';
          message.textContent = 'H√£y th·ª≠ l·∫°i v√†o ng√†y mai nh√©!';
        } else {
          title.textContent = 'Ch√∫c m·ª´ng!';
          message.textContent = `B·∫°n ƒë√£ tr√∫ng: ${prize.name}!`;
          this.totalWins++;
        }
        
        modal.classList.remove('hidden');
      }
      
      claimPrize() {
        const modal = document.getElementById('result-modal');
        modal.classList.add('hidden');
        
        // Show success notification
        this.showNotification('ƒê√£ nh·∫≠n th∆∞·ªüng th√†nh c√¥ng! Ki·ªÉm tra email ƒë·ªÉ xem chi ti·∫øt.', 'success');
      }
      
      updateStats() {
        document.getElementById('spins-left').textContent = this.spinsLeft;
        document.getElementById('total-wins').textContent = this.totalWins;
        document.getElementById('total-spins').textContent = this.totalSpins;
      }
      
      lightenColor(color, percent) {
        const num = parseInt(color.replace("#", ""), 16);
        const amt = Math.round(2.55 * percent);
        const R = (num >> 16) + amt;
        const G = (num >> 8 & 0x00FF) + amt;
        const B = (num & 0x0000FF) + amt;
        return "#" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +
          (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +
          (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);
      }
      
      showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `fixed top-20 right-4 z-50 px-6 py-3 rounded-lg text-white font-medium shadow-lg transform translate-x-full transition-transform duration-300 ${
          type === 'success' ? 'bg-green-500' : 
          type === 'warning' ? 'bg-yellow-500' : 
          'bg-blue-500'
        }`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
          notification.style.transform = 'translateX(0)';
        }, 100);
        
        setTimeout(() => {
          notification.style.transform = 'translateX(100%)';
          setTimeout(() => {
            document.body.removeChild(notification);
          }, 300);
        }, 3000);
      }
    }
    
    function closeResultModal() {
      document.getElementById('result-modal').classList.add('hidden');
    }
    
    // Initialize game
    document.addEventListener('DOMContentLoaded', () => {
      new SpinWheelGame();
    });
  </script>
@endsection
